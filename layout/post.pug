extends includes/layout.pug

block content
  - var estReadTime = min2read(page.content)
  - var highlightReg = /<figure class="highlight[ "].*?\/figure>/g
  - var highlights = page.content.match(highlightReg).map(function (figure) { return figure.replace(/figure/g, 'div')})
  - var partions = page.content.split(highlightReg).map(function (partion) { return '<div class="container"><div class="left column">' + partion.replace(/<img.*?title="(.*?)".*?\/?>/g, '<figure>$&<figcaption>$1</figcaption></figure>') + '</div></div>'; })
  - var rearrangedContent = partions.reduce(function (acc, partion, index) { acc.push(partion); acc.push(highlights[index]); return acc;}, []).join('');

  include ../source/images/shape-reference.svg
  .masthead.hatched
    svg.behind-meta(width="666", height="333")
      use(xlink:href="#color-block")
    svg.left-meta(width="666", height="333")
      use(xlink:href="#color-block", filter="url(#blur-6)", transform="translate(333 166) scale(-0.5 0.5) translate(-333 -167)")
    .container
      h2= page.title
      p= page.subtitle
  .container
    .meta
      ul
        li.last-updated
          span.name Last updated:
          span.value= page.updated.format('D MMM YYYY')
        li
          span.name Est. Read Time:
          span.value= estReadTime + ' ' + (estReadTime > 1 ? 'mins' : 'min')
        li.tags
          span.name Category:
          span.value= page.categories.toArray().map(function (category) {return category.name}).join(', ')
        li.tags
          span.name Tagged:
          span.value= page.tags.toArray().map(function (tag) { return '#' + tag.name }).join(', ')
  !=rearrangedContent
  .footer-share.container
  .clear
  svg.left-shape(style="margin-left: -316.35px", width="466.2", height="932.4")
    use(xlink:href="#color-block", filter="url(#blur-4)", transform="scale(-1.4 1.4) rotate(90)")
  svg.right-shape(width="166.5", height="599.4")
    use(xlink:href="#color-block", filter="url(#blur-8)", transform="scale(-0.9 0.9) rotate(90)")
